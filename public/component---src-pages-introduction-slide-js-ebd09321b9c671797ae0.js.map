{"version":3,"file":"component---src-pages-introduction-slide-js-ebd09321b9c671797ae0.js","mappings":"kNAAA,EAAe,IAA0B,wDCuEvC,MAjEF,WAGI,MAAM,EAACA,EAAU,EAACC,IAAgBC,EAAAA,EAAAA,UAAS,CAAC,oBACtCC,EAAe,CAAC,kBAAmB,eAAgB,kBAAmB,eAAgB,eAiB5F,OAfAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAWC,aAAY,KAC3BL,GAAcM,IACZ,MAAMC,EAAeD,EAAcE,OACnC,OAAID,EAAeL,EAAaM,OACxB,GAAN,eAAWF,GAAa,CAAEJ,EAAaK,KAElCD,CAAa,GACpB,GACD,KAEH,MAAO,IAAMG,cAAcL,EAAS,GACnC,CAACF,IAIA,uBAAKQ,UAAU,aACf,uBAAKA,UAAU,sBACb,uBAAKA,UAAU,mBACX,uBAAKC,IAAKC,EAAYC,IAAI,cAAcC,MAAO,CAAEC,SAAU,WAE/D,uBAAKL,UAAU,kBACb,uBAAKA,UAAU,sBACfI,MAAO,CACCE,WAAY,wBAEhB,wBAAMF,MAAO,CACTE,WAAY,yBACZC,SAAU,UACX,WACH,2BACA,2BACA,2BACA,4BAAM,oDACN,2BACA,4BAAM,cACLlB,EAAUmB,KAAI,CAACC,EAAUC,IACtB,gBAAC,WAAc,CAACC,IAAKD,GACrB,wBACIV,UAAY,YAAWU,EAAQrB,EAAUS,OAAS,EAAI,UAAY,OAClEY,IAAUrB,EAAUS,OAAS,GAAkB,gBAAbW,EAA6B,oBAAsB,MAGpFA,GAEJC,EAAQrB,EAAUS,OAAS,GAAK,wBAAME,UAAU,SAAQ,UAG7D,2BACA,2BACA,4BAAM,8CACN,8BAMd,C","sources":["webpack://gatsby-starter-hello-world/./joprofile.gif","webpack://gatsby-starter-hello-world/./src/pages/IntroductionSlide.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/joprofile-db529395c907b63f733b8a53633da5ba.gif\";","import React, { useState, useEffect } from 'react';\nimport './CrossoutAnimation.css'; // We'll create this CSS file next\nimport './VideoWithText.css'; \nimport profileGIF from '../../joprofile.gif'\n\n\nfunction IntroductionSlide() {\n\n    // CROSSOUTANIMINATION\n    const [locations, setLocations] = useState(['Los Angeles, CA']);\n    const allLocations = ['Los Angeles, CA', 'Seoul, Korea', 'Vientiane, Laos', 'Berkeley, CA', 'Where Now ?'];\n  \n    useEffect(() => {\n      const interval = setInterval(() => {\n        setLocations((prevLocations) => {\n          const currentIndex = prevLocations.length;\n          if (currentIndex < allLocations.length) {\n            return [...prevLocations, allLocations[currentIndex]];\n          }\n          return prevLocations; // Stop adding after all locations are added\n        });\n      }, 2000); // Change location every 4 seconds\n  \n      return () => clearInterval(interval);\n    }, [allLocations]);\n\n\n    return (\n        <div className=\"container\">\n        <div className=\"video-text-wrapper\">\n          <div className=\"video-container\">\n              <img src={profileGIF} alt=\"profile gif\" style={{ maxWidth: '40vw' }} />\n          </div>\n          <div className=\"text-container\">\n            <div className=\"animation-container\" \n            style={{\n                    fontFamily: \"'Inter', sans-serif\",\n                }}>\n                <span style={{\n                    fontFamily: \"'IkeaFont', sans-serif\",\n                    fontSize: '4.3vw',\n                }}>Johanna</span>\n                <br />\n                <br />\n                <br />\n                <span> is a designer, multimedia artist, and engineer </span>\n                <br />\n                <span> based in </span>\n                {locations.map((location, index) => (\n                    <React.Fragment key={index}>\n                    <span \n                        className={`location ${index < locations.length - 1 ? 'crossed' : ' '} ${\n                        index === locations.length - 1 && location === 'Where Now ?' ? 'red-question-mark' : ''\n                        }`}\n                    >\n                        {location}\n                    </span>\n                    {index < locations.length - 1 && <span className=\"space\">&nbsp; &nbsp;</span>}\n                    </React.Fragment>\n                ))}\n                <br />\n                <br />\n                <span> passionate about fashion soup and oranges</span>\n                <br />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  export default IntroductionSlide;"],"names":["locations","setLocations","useState","allLocations","useEffect","interval","setInterval","prevLocations","currentIndex","length","clearInterval","className","src","profileGIF","alt","style","maxWidth","fontFamily","fontSize","map","location","index","key"],"sourceRoot":""}