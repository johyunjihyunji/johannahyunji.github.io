{"version":3,"file":"component---src-pages-index-js-a05015f7acd5ffd8afa4.js","mappings":"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","sources":["webpack://gatsby-starter-hello-world/./src/pages/GridBackground.js","webpack://gatsby-starter-hello-world/./joprofile.gif","webpack://gatsby-starter-hello-world/./src/pages/IntroductionSlide.js","webpack://gatsby-starter-hello-world/./src/pages/ProjectSlide.js","webpack://gatsby-starter-hello-world/./src/pages/index.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst GridContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(50px, 1fr));\n  grid-auto-rows: minmax(50px, 1fr);\n  pointer-events: none;\n`;\n\nconst GridCell = styled.div`\n  background-color: rgba(0, 0, 255, ${props => props.opacity});\n  transition: background-color 0.1s ease;\n`;\n\nconst GridBackground = () => {\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n  const gridRef = useRef(null);\n\n\n  if (typeof window === 'undefined') {\n    return null; // Render nothing or a loading state on the server\n  }\n  \n\n  useEffect(() => {\n    const handleMouseMove = (event) => {\n      setMousePosition({ x: event.clientX, y: event.clientY });\n    };\n\n    window.addEventListener('mousemove', handleMouseMove);\n\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, []);\n\n  useEffect(() => {\n    const updateGrid = () => {\n      if (!gridRef.current) return;\n\n      const cells = gridRef.current.childNodes;\n      cells.forEach((cell) => {\n        const rect = cell.getBoundingClientRect();\n        const centerX = rect.left + rect.width / 2;\n        const centerY = rect.top + rect.height / 2;\n\n        const distance = Math.sqrt(\n          Math.pow(mousePosition.x - centerX, 2) + Math.pow(mousePosition.y - centerY, 2)\n        );\n\n        const maxDistance = 200; // Adjust this value to change the size of the \"spotlight\"\n        const opacity = Math.max(0, 1 - distance / maxDistance);\n        cell.style.backgroundColor = `rgba(0, 0, 255, ${opacity * 0.5})`;\n      });\n    };\n\n    updateGrid();\n  }, [mousePosition]);\n\n  const createGrid = () => {\n    const cellsCount = Math.ceil((window.innerWidth / 50) * (window.innerHeight / 50));\n    return Array(cellsCount).fill().map((_, index) => (\n      <GridCell key={index} />\n    ));\n  };\n\n  return (\n    <GridContainer ref={gridRef}>\n      {createGrid()}\n    </GridContainer>\n  );\n};\n\nexport default GridBackground;","export default __webpack_public_path__ + \"static/joprofile-db529395c907b63f733b8a53633da5ba.gif\";","import React, { useState, useEffect } from 'react';\nimport './CrossoutAnimation.css'; // We'll create this CSS file next\nimport './VideoWithText.css'; \nimport profileGIF from '../../joprofile.gif'\n\n\nfunction IntroductionSlide() {\n\n    // CROSSOUTANIMINATION\n    const [locations, setLocations] = useState(['Los Angeles, CA']);\n    const allLocations = ['Los Angeles, CA', 'Seoul, Korea', 'Vientiane, Laos', 'Berkeley, CA', '?'];\n  \n    useEffect(() => {\n      const interval = setInterval(() => {\n        setLocations((prevLocations) => {\n          const currentIndex = prevLocations.length;\n          if (currentIndex < allLocations.length) {\n            return [...prevLocations, allLocations[currentIndex]];\n          }\n          return prevLocations; // Stop adding after all locations are added\n        });\n      }, 2000); // Change location every 4 seconds\n  \n      return () => clearInterval(interval);\n    }, [allLocations]);\n\n\n    return (\n        <div className=\"container\">\n        <div className=\"video-text-wrapper\">\n          <div className=\"video-container\">\n              <img src={profileGIF} alt=\"profile gif\" style={{ maxWidth: '40vw' }} />\n          </div>\n          <div className=\"text-container\">\n            <div className=\"animation-container\" \n            style={{\n                    fontFamily: \"'Inter', sans-serif\",\n                }}>\n                <span style={{\n                    fontSize: '100px',\n                    fontWeight: 700,\n                    color: '#00BE09'\n                }}>Jo</span> \n                <span style={{\n                    fontSize: '100px',\n                    fontWeight: 700\n                }}>hanna Lee</span>\n                <br />\n                <br />\n                <br />\n                <span> a designer and engineer based in </span>\n                <br />\n                {locations.map((location, index) => (\n                    <React.Fragment key={index}>\n                    <span \n                        className={`location ${index < locations.length - 1 ? 'crossed' : ''} ${\n                        index === locations.length - 1 && location === '?' ? 'red-question-mark' : ''\n                        }`}\n                    >\n                        {location}\n                    </span>\n                    {index < locations.length - 1 && <span className=\"space\">&nbsp;</span>}\n                    </React.Fragment>\n                ))}\n                <br />\n                <br />\n                <span> studying CS and design innovation </span>\n                <br />\n                <span> at University of California Berkeley</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  export default IntroductionSlide;","// src/Gallery.js\nimport React from 'react';\nimport styled from 'styled-components';\nimport './Gallary.css'; \n\n// Sample image URLs (replace these with your own images)\nconst images = [\n  'https://via.placeholder.com/150',\n  'https://via.placeholder.com/300x400',\n  'https://via.placeholder.com/400x300',\n  'https://via.placeholder.com/200',\n  'https://via.placeholder.com/250x400',\n  'https://via.placeholder.com/350x200',\n  'https://via.placeholder.com/300',\n  'https://via.placeholder.com/450x300',\n  'https://via.placeholder.com/300x250',\n];\n\n// Function to shuffle the images array\nconst shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n};\n\nconst GalleryContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 30px; /* Space between items */\n  padding: 20px;\n  margin: 10vw 10vw\n`;\n\nconst GalleryItem = styled.div`\n  overflow: hidden;\n  \n  img {\n    width: 100%;\n    height: auto;\n    display: block;\n    transition: transform 0.3s ease;\n\n    &:hover {\n      transform: scale(1.05);\n    }\n  }\n\n  &.square img {\n    aspect-ratio: 1 / 1; /* Square */\n    object-fit: cover;\n  }\n\n  &.horizontal img {\n    aspect-ratio: 3 / 4; /* Horizontal rectangle */\n    object-fit: cover;\n  }\n\n  &.vertical img {\n    aspect-ratio: 4 / 3; /* Vertical rectangle */\n    object-fit: cover;\n  }\n`;\n\nconst getRandomSizeClass = () => {\n  const sizes = ['square', 'horizontal', 'vertical'];\n  return sizes[Math.floor(Math.random() * sizes.length)];\n};\n\nconst ProjectSlide = () => {\n  \n// Shuffle images to randomize their order\nshuffleArray(images);\n\nreturn (\n    <GalleryContainer>\n      {images.map((src, index) => (\n        <GalleryItem key={index} className={getRandomSizeClass()}>\n          <img src={src} alt={`Gallery item ${index + 1}`} />\n        </GalleryItem>\n      ))}\n    </GalleryContainer>\n);\n};\n\nexport default ProjectSlide;","import * as React from \"react\"\nimport IntroductionSlide from './IntroductionSlide';\nimport ProjectSlide from './ProjectSlide';\nimport GridBackground from './GridBackground';\n\n\nfunction Home() {\n  return (\n    <div>\n      <GridBackground />\n      <IntroductionSlide />\n      <ProjectSlide />\n    </div>\n\n  );\n}\n\n\nexport default Home"],"names":["GridContainer","styled","div","GridCell","props","opacity","mousePosition","setMousePosition","useState","x","y","gridRef","useRef","window","useEffect","handleMouseMove","event","clientX","clientY","addEventListener","removeEventListener","current","childNodes","forEach","cell","rect","getBoundingClientRect","centerX","left","width","centerY","top","height","distance","Math","sqrt","pow","max","style","backgroundColor","updateGrid","ref","cellsCount","ceil","innerWidth","innerHeight","Array","fill","map","_","index","key","createGrid","locations","setLocations","allLocations","interval","setInterval","prevLocations","currentIndex","length","clearInterval","className","src","profileGIF","alt","maxWidth","fontFamily","fontSize","fontWeight","color","location","images","GalleryContainer","GalleryItem","getRandomSizeClass","sizes","floor","random","array","i","j","shuffleArray"],"sourceRoot":""}