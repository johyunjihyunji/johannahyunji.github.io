{"version":3,"file":"component---src-pages-lopster-gallary-js-582af94f5f81021a59ff.js","mappings":"4KAGA,MAAMA,EAAmBC,EAAAA,GAAOC,GAAI;;;;EAM9BC,EAAYF,EAAAA,GAAOC,GAAI;;;;eAIdE,GAAU,UAASA,EAAMC;;;4BAGZD,GAAU,UAASA,EAAMC;;EAI/CC,EAAQL,EAAAA,GAAOM,GAAI;;;;EAqDzB,UA9CuB,KACrB,MAAM,EAACC,EAAU,EAACC,IAAgBC,EAAAA,EAAAA,UAAS,IAGrCC,GAASC,EAAAA,EAAAA,UAAQ,IAAM,CAC3B,CAAEC,IAAK,sBAAuBC,MAAO,EAAGC,UAAW,GACnD,CAAEF,IAAK,sBAAuBC,MAAO,EAAGC,WAAY,GACpD,CAAEF,IAAK,sBAAuBC,MAAO,EAAGC,UAAW,GACnD,CAAEF,IAAK,sBAAuBC,MAAO,EAAGC,WAAY,GACpD,CAAEF,IAAK,sBAAuBC,MAAO,EAAGC,UAAW,GACnD,CAAEF,IAAK,sBAAuBC,MAAO,EAAGC,WAAY,GACpD,CAAEF,IAAK,sBAAuBC,MAAO,EAAGC,UAAW,GACnD,CAAEF,IAAK,sBAAuBC,MAAO,EAAGC,WAAY,GACpD,CAAEF,IAAK,sBAAuBC,MAAO,EAAGC,UAAW,GACnD,CAAEF,IAAK,sBAAuBC,MAAO,EAAGC,WAAY,KAEnD,IAmBH,OAjBAC,EAAAA,EAAAA,YAAU,KAER,MAAMC,EAAmBC,MAAMP,EAAOQ,QAAQC,KAAK,GACnDX,EAAaQ,GAEb,MAAMI,EAAWC,aAAY,KAC3Bb,GAAac,GACXA,EAAcC,KAAI,CAACnB,EAAUoB,KAC3B,MAAM,MAAEX,EAAK,UAAEC,GAAcJ,EAAOc,GACpC,OAAQpB,EAAWS,EAAQC,GAAa,GAAG,KAE9C,GACA,IAEH,MAAO,IAAMW,cAAcL,EAAS,GACnC,CAACV,IAGF,gBAACX,EAAgB,KACdW,EAAOa,KAAI,CAACG,EAAOF,IAClB,gBAACtB,EAAS,CAACyB,IAAKH,EAAOpB,SAAUG,EAAUiB,IACzC,gBAACnB,EAAK,CAACO,IAAKc,EAAMd,IAAKgB,IAAM,WAAUJ,EAAQ,SAGlC,C","sources":["webpack://gatsby-starter-hello-world/./src/pages/LopsterGallary.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport styled from 'styled-components';\n\nconst GalleryContainer = styled.div`\n  display: flex;\n  padding: 20px;\n  justify-content: center; /* Center the content horizontally */\n`;\n\nconst ImageItem = styled.div`\n  margin-right: 20px;\n  position: relative;\n  transition: transform 0.3s ease;\n  transform: ${props => `rotate(${props.rotation}deg)`};\n\n  &:hover {\n    transform: scale(1.1) ${props => `rotate(${props.rotation}deg)`};\n  }\n`;\n\nconst Image = styled.img`\n  width: 100px;\n  height: 100px;\n  object-fit: cover;\n`;\n\n\nconst LopsterGallery = () => {\n  const [rotations, setRotations] = useState([]);\n\n  // Image list with speed and direction\n  const images = useMemo(() => [\n    { src: './../../favicon.ico', speed: 2, direction: 1 }, // clockwise\n    { src: './../../favicon.ico', speed: 3, direction: -1 }, // counterclockwise\n    { src: './../../favicon.ico', speed: 1, direction: 1 },\n    { src: './../../favicon.ico', speed: 4, direction: -1 },\n    { src: './../../favicon.ico', speed: 2, direction: 1 },\n    { src: './../../favicon.ico', speed: 3, direction: -1 },\n    { src: './../../favicon.ico', speed: 1, direction: 1 },\n    { src: './../../favicon.ico', speed: 4, direction: -1 },\n    { src: './../../favicon.ico', speed: 2, direction: 1 },\n    { src: './../../favicon.ico', speed: 3, direction: -1 },\n    // Add more images as needed\n  ], []); \n\n  useEffect(() => {\n    // Initialize rotations for each image\n    const initialRotations = Array(images.length).fill(0);\n    setRotations(initialRotations);\n\n    const interval = setInterval(() => {\n      setRotations(prevRotations =>\n        prevRotations.map((rotation, index) => {\n          const { speed, direction } = images[index];\n          return (rotation + speed * direction) % 360; // Update rotation based on speed and direction\n        })\n      );\n    }, 30); // Adjust this value to control overall rotation speed\n\n    return () => clearInterval(interval);\n  }, [images]);\n\n  return (\n    <GalleryContainer>\n      {images.map((image, index) => (\n        <ImageItem key={index} rotation={rotations[index]}>\n          <Image src={image.src} alt={`Lobster ${index + 1}`} />\n        </ImageItem>\n      ))}\n    </GalleryContainer>\n  );\n};\n\nexport default LopsterGallery;"],"names":["GalleryContainer","styled","div","ImageItem","props","rotation","Image","img","rotations","setRotations","useState","images","useMemo","src","speed","direction","useEffect","initialRotations","Array","length","fill","interval","setInterval","prevRotations","map","index","clearInterval","image","key","alt"],"sourceRoot":""}