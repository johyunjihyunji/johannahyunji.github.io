{"version":3,"file":"component---src-pages-project-slide-js.js","mappings":";;;;;;;;;;;;;;;AAAA;AAKA;AACA,KAAME,OAAM,CAAG,CACb,iCAAiC,CACjC,qCAAqC,CACrC,qCAAqC,CACrC,iCAAiC,CACjC,qCAAqC,CACrC,qCAAqC,CACrC,iCAAiC,CACjC,qCAAqC,CACrC,qCAAqC,CACtC,CAED;AACA,KAAMC,aAAY,CAAIC,KAAK,EAAK,CAC9B,IAAK,GAAIC,EAAC,CAAGD,KAAK,CAACE,MAAM,CAAG,CAAC,CAAED,CAAC,CAAG,CAAC,CAAEA,CAAC,EAAE,CAAE,CACzC,KAAME,EAAC,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,EAAIL,CAAC,CAAG,CAAC,CAAC,CAAC,CAC7C,CAACD,KAAK,CAACC,CAAC,CAAC,CAAED,KAAK,CAACG,CAAC,CAAC,CAAC,CAAG,CAACH,KAAK,CAACG,CAAC,CAAC,CAAEH,KAAK,CAACC,CAAC,CAAC,CAAC,CAC7C,CACF,CAAC,CAED,KAAMM,iBAAgB,CAAGV,mEAAM,CAACW,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAMC,YAAW,CAAGZ,mEAAM,CAACW,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAME,mBAAkB,CAAG,IAAM,CAC/B,KAAMC,MAAK,CAAG,CAAC,QAAQ,CAAE,YAAY,CAAE,UAAU,CAAC,CAClD,MAAOA,MAAK,CAACP,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,CAAGK,KAAK,CAACT,MAAM,CAAC,CAAC,CACxD,CAAC,CAED,KAAMU,aAAY,CAAG,IAAM,CAE3B;AACAb,YAAY,CAACD,MAAM,CAAC,CAEpB,mBACI,2DAAC,gBAAgB,MACdA,MAAM,CAACe,GAAG,CAAC,CAACC,GAAG,CAAEC,KAAK,gBACrB,2DAAC,WAAW,EAAC,GAAG,CAAEA,KAAM,CAAC,SAAS,CAAEL,kBAAkB,EAAG,eACvD,kEAAK,GAAG,CAAEI,GAAI,CAAC,GAAG,CAAG,gBAAeC,KAAK,CAAG,CAAE,EAAE,EAAG,CAEtD,CAAC,CACe,CAEvB,CAAC,CAED,iEAAeH,YAAY","sources":["webpack://gatsby-starter-hello-world/./src/pages/ProjectSlide.js"],"sourcesContent":["// src/Gallery.js\nimport React from 'react';\nimport styled from 'styled-components';\nimport './Gallary.css'; \n\n// Sample image URLs (replace these with your own images)\nconst images = [\n  'https://via.placeholder.com/150',\n  'https://via.placeholder.com/300x400',\n  'https://via.placeholder.com/400x300',\n  'https://via.placeholder.com/200',\n  'https://via.placeholder.com/250x400',\n  'https://via.placeholder.com/350x200',\n  'https://via.placeholder.com/300',\n  'https://via.placeholder.com/450x300',\n  'https://via.placeholder.com/300x250',\n];\n\n// Function to shuffle the images array\nconst shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n};\n\nconst GalleryContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 30px; /* Space between items */\n  padding: 20px;\n  margin: 10vw 10vw\n`;\n\nconst GalleryItem = styled.div`\n  overflow: hidden;\n  \n  img {\n    width: 100%;\n    height: auto;\n    display: block;\n    transition: transform 0.3s ease;\n\n    &:hover {\n      transform: scale(1.05);\n    }\n  }\n\n  &.square img {\n    aspect-ratio: 1 / 1; /* Square */\n    object-fit: cover;\n  }\n\n  &.horizontal img {\n    aspect-ratio: 3 / 4; /* Horizontal rectangle */\n    object-fit: cover;\n  }\n\n  &.vertical img {\n    aspect-ratio: 4 / 3; /* Vertical rectangle */\n    object-fit: cover;\n  }\n`;\n\nconst getRandomSizeClass = () => {\n  const sizes = ['square', 'horizontal', 'vertical'];\n  return sizes[Math.floor(Math.random() * sizes.length)];\n};\n\nconst ProjectSlide = () => {\n  \n// Shuffle images to randomize their order\nshuffleArray(images);\n\nreturn (\n    <GalleryContainer>\n      {images.map((src, index) => (\n        <GalleryItem key={index} className={getRandomSizeClass()}>\n          <img src={src} alt={`Gallery item ${index + 1}`} />\n        </GalleryItem>\n      ))}\n    </GalleryContainer>\n);\n};\n\nexport default ProjectSlide;"],"names":["React","styled","images","shuffleArray","array","i","length","j","Math","floor","random","GalleryContainer","div","GalleryItem","getRandomSizeClass","sizes","ProjectSlide","map","src","index"],"sourceRoot":""}