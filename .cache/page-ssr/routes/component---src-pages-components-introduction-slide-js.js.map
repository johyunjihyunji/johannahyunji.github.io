{"version":3,"file":"component---src-pages-components-introduction-slide-js.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA,gDAAe,wDAAwD;;ACC9B;AAKzC,QAAS,CAAAI,iBAAiBA,CAAA,CAAG,CAEzB;AACA,KAAM,GAACC,SAAS,GAAEC,YAAY,EAAIL,sBAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAC/D,KAAM,CAAAM,YAAY,CAAG,CAAC,iBAAiB,CAAE,cAAc,CAAE,iBAAiB,CAAE,cAAc,CAAE,aAAa,CAAC,CAE1GL,uBAAS,CAAC,IAAM,CACd,KAAM,CAAAM,QAAQ,CAAGC,WAAW,CAAC,IAAM,CACjCH,YAAY,CAAEI,aAAa,EAAK,CAC9B,KAAM,CAAAC,YAAY,CAAGD,aAAa,CAACE,MAAM,CACzC,GAAID,YAAY,CAAGJ,YAAY,CAACK,MAAM,CAAE,CACtC,MAAO,CAAC,GAAGF,aAAa,CAAEH,YAAY,CAACI,YAAY,CAAC,CAAC,CACvD,CACA,MAAO,CAAAD,aAAa,CAAE;AACxB,CAAC,CAAC,CACJ,CAAC,CAAE,IAAI,CAAC,CAAE;AAEV,MAAO,IAAMG,aAAa,CAACL,QAAQ,CAAC,CACtC,CAAC,CAAE,CAACD,YAAY,CAAC,CAAC,CAGlB,mBACIP,gCAAA,QAAKe,SAAS,CAAC,WAAW,eAC1Bf,gCAAA,QAAKe,SAAS,CAAC,oBAAoB,eACjCf,gCAAA,QAAKe,SAAS,CAAC,iBAAiB,eAC5Bf,gCAAA,QAAKgB,GAAG,CAAEb,SAAW,CAACc,GAAG,CAAC,aAAa,CAACC,KAAK,CAAE,CAAEC,QAAQ,CAAE,MAAO,CAAE,CAAE,CACrE,CAAC,cACNnB,gCAAA,QAAKe,SAAS,CAAC,gBAAgB,eAC7Bf,gCAAA,QAAKe,SAAS,CAAC,qBAAqB,CACpCG,KAAK,CAAE,CACCE,UAAU,CAAE,qBAChB,CAAE,eACFpB,gCAAA,SAAMkB,KAAK,CAAE,CACTE,UAAU,CAAE,wBAAwB,CACpCC,QAAQ,CAAE,OACd,CAAE,EAAC,SAAa,CAAC,cACjBrB,gCAAA,UAAK,CAAC,cACNA,gCAAA,UAAK,CAAC,cACNA,gCAAA,UAAK,CAAC,cACNA,gCAAA,aAAM,kDAAsD,CAAC,cAC7DA,gCAAA,UAAK,CAAC,cACNA,gCAAA,aAAM,YAAgB,CAAC,CACtBK,SAAS,CAACiB,GAAG,CAAC,CAACC,QAAQ,CAAEC,KAAK,gBAC3BxB,gCAAA,CAACA,6BAAc,EAAC0B,GAAG,CAAEF,KAAM,eAC3BxB,gCAAA,SACIe,SAAS,CAAE,YAAYS,KAAK,CAAGnB,SAAS,CAACO,MAAM,CAAG,CAAC,CAAG,SAAS,CAAG,GAAG,IACrEY,KAAK,GAAKnB,SAAS,CAACO,MAAM,CAAG,CAAC,EAAIW,QAAQ,GAAK,aAAa,CAAG,mBAAmB,CAAG,EAAE,EACpF,EAEFA,QACC,CAAC,CACNC,KAAK,CAAGnB,SAAS,CAACO,MAAM,CAAG,CAAC,eAAIZ,gCAAA,SAAMe,SAAS,CAAC,OAAO,EAAC,WAAmB,CAC5D,CACnB,CAAC,cACFf,gCAAA,UAAK,CAAC,cACNA,gCAAA,UAAK,CAAC,cACNA,gCAAA,aAAM,4CAAgD,CAAC,cACvDA,gCAAA,UAAK,CACJ,CACF,CACF,CACF,CAAC,CAEV,CAEA,mEAAeI,iBAAiB","sources":["webpack://gatsby-starter-hello-world/./joprofile.gif","webpack://gatsby-starter-hello-world/./src/pages/Components/IntroductionSlide.js"],"sourcesContent":["export default \"/static/joprofile-db529395c907b63f733b8a53633da5ba.gif\";","import React, { useState, useEffect } from 'react';\nimport '../style/CrossoutAnimation.css'; // We'll create this CSS file next\nimport '../style/VideoWithText.css'; \nimport profileGIF from '../../../joprofile.gif'\n\n\nfunction IntroductionSlide() {\n\n    // CROSSOUTANIMINATION\n    const [locations, setLocations] = useState(['Los Angeles, CA']);\n    const allLocations = ['Los Angeles, CA', 'Seoul, Korea', 'Vientiane, Laos', 'Berkeley, CA', 'Where Now ?'];\n  \n    useEffect(() => {\n      const interval = setInterval(() => {\n        setLocations((prevLocations) => {\n          const currentIndex = prevLocations.length;\n          if (currentIndex < allLocations.length) {\n            return [...prevLocations, allLocations[currentIndex]];\n          }\n          return prevLocations; // Stop adding after all locations are added\n        });\n      }, 2000); // Change location every 4 seconds\n  \n      return () => clearInterval(interval);\n    }, [allLocations]);\n\n\n    return (\n        <div className=\"container\">\n        <div className=\"video-text-wrapper\">\n          <div className=\"video-container\">\n              <img src={profileGIF} alt=\"profile gif\" style={{ maxWidth: '40vw' }} />\n          </div>\n          <div className=\"text-container\">\n            <div className=\"animation-container\" \n            style={{\n                    fontFamily: \"'Inter', sans-serif\",\n                }}>\n                <span style={{\n                    fontFamily: \"'IkeaFont', sans-serif\",\n                    fontSize: '4.3vw',\n                }}>Johanna</span>\n                <br />\n                <br />\n                <br />\n                <span> is a designer, multimedia artist, and engineer </span>\n                <br />\n                <span> based in </span>\n                {locations.map((location, index) => (\n                    <React.Fragment key={index}>\n                    <span \n                        className={`location ${index < locations.length - 1 ? 'crossed' : ' '} ${\n                        index === locations.length - 1 && location === 'Where Now ?' ? 'red-question-mark' : ''\n                        }`}\n                    >\n                        {location}\n                    </span>\n                    {index < locations.length - 1 && <span className=\"space\">&nbsp; &nbsp;</span>}\n                    </React.Fragment>\n                ))}\n                <br />\n                <br />\n                <span> passionate about fashion soup and oranges</span>\n                <br />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  export default IntroductionSlide;"],"names":["React","useState","useEffect","profileGIF","IntroductionSlide","locations","setLocations","allLocations","interval","setInterval","prevLocations","currentIndex","length","clearInterval","createElement","className","src","alt","style","maxWidth","fontFamily","fontSize","map","location","index","Fragment","key"],"sourceRoot":""}